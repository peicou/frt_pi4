// drm.dl
/*
 * FRT - A Godot platform targeting single board computers
 * Copyright (c) 2017-2019  Emanuele Fornara
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

#include <xf86drm.h>
#include <xf86drmMode.h>

typedef int (*___drmModeAddFB___)(int fd, uint32_t width, uint32_t height, uint8_t depth, uint8_t bpp, uint32_t pitch, uint32_t bo_handle, uint32_t *buf_id);
typedef int (*___drmModeSetCrtc___)(int fd, uint32_t crtcId, uint32_t bufferId, uint32_t x, uint32_t y, uint32_t *connectors, int count, drmModeModeInfoPtr mode);
typedef int (*___drmModeRmFB___)(int fd, uint32_t bufferId);
typedef void (*___drmModeFreeCrtc___)(drmModeCrtcPtr ptr);
typedef drmModeResPtr (*___drmModeGetResources___)(int fd);
typedef drmModeConnectorPtr (*___drmModeGetConnector___)(int fd, uint32_t connectorId);
typedef drmModeEncoderPtr (*___drmModeGetEncoder___)(int fd, uint32_t encoder_id);
typedef drmModeCrtcPtr (*___drmModeGetCrtc___)(int fd, uint32_t crtcId);
typedef void (*___drmModeFreeEncoder___)(drmModeEncoderPtr ptr);
typedef void (*___drmModeFreeConnector___)(drmModeConnectorPtr ptr);
typedef void (*___drmModeFreeResources___)(drmModeResPtr ptr);
